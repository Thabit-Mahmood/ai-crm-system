services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ai_crm
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-crm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - ai-crm-network

  # Kafka Message Queue
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ai-crm-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ai-crm-network

  # Data Ingestion Service
  data-ingestion:
    build: ./services/data-ingestion
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - ai-crm-network

  # Language Detection Service
  language-detector:
    build: ./services/language-detector
    ports:
      - "3002:3002"
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
    depends_on:
      - kafka
      - redis
    networks:
      - ai-crm-network

  # NLP Processor Service
  nlp-processor:
    build: ./services/nlp-processor
    ports:
      - "3003:8000"
    environment:
      KAFKA_BROKER: kafka:9092
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      GPU_ENABLED: "false"
    depends_on:
      - kafka
      - redis
      - postgres
    networks:
      - ai-crm-network

  # Alert Manager Service
  alert-manager:
    build: ./services/alert-manager
    ports:
      - "3004:3004"
    environment:
      KAFKA_BROKER: kafka:9092
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      - kafka
      - postgres
      - redis
    networks:
      - ai-crm-network

  # Analytics Engine Service
  analytics-engine:
    build: ./services/analytics-engine
    ports:
      - "3005:3005"
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    networks:
      - ai-crm-network

  # Dashboard Frontend
  dashboard:
    build: ./dashboard
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:80
    depends_on:
      - data-ingestion
    networks:
      - ai-crm-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - dashboard
      - data-ingestion
      - language-detector
      - nlp-processor
      - alert-manager
      - analytics-engine
    networks:
      - ai-crm-network

volumes:
  postgres_data:

networks:
  ai-crm-network:
    driver: bridge
